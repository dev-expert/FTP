{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\contact-app\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { uuid } from 'uuidv4';\nimport api from \"../api/contacts\";\nimport './App.css';\nimport Header from './Header';\nimport AddContact from './AddContact';\nimport ContactList from './ContactList';\nimport ContactDetail from './ContactDetail';\nimport EditContact from './EditContact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]); //RetrieveContacts\n\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  };\n\n  const addContactHandler = async contact => {\n    console.log(contact);\n    const request = {\n      id: uuid(),\n      ...contact\n    };\n    const response = await api.post(\"/contacts\", request);\n    console.log(response);\n    setContacts([...contacts, response.data]);\n  };\n\n  const updateContactHandler = async contact => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const {\n      id,\n      name,\n      email\n    } = response.data;\n    setContacts(contacts.map(contact => {\n      return contact.id === id ? { ...response.data\n      } : contact;\n    }));\n  };\n\n  const removeContactHandler = async id => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n\n  const searchHandler = searchTerm => {\n    setSearchTerm(searchTerm);\n\n    if (searchTerm !== \"\") {\n      const newContactList = contacts.filter(contact => {\n        Object.values(contact).join(\" \").toLowerCase().includes;\n      });\n    }\n  };\n\n  useEffect(() => {\n    //fetching data from localStorage \n    // const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    // if (retriveContacts) setContacts(retriveContacts)\n    //fetching data from server(api)\n    const getAllContacts = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setContacts(allContacts);\n    };\n\n    getAllContacts();\n  }, []);\n  useEffect(() => {// localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts))\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(ContactList, { ...props,\n            contacts: contacts,\n            getContactId: removeContactHandler,\n            term: searchTerm,\n            searchKeyword: searchHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          render: props => /*#__PURE__*/_jsxDEV(AddContact, { ...props,\n            addContactHandler: addContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit\",\n          render: props => /*#__PURE__*/_jsxDEV(EditContact, { ...props,\n            updateContactHandler: updateContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact/:id\",\n          component: ContactDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"h5OAHSEEz+zGnfAsuFVOLbn0tkA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/REACT/contact-app/src/components/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","uuid","api","Header","AddContact","ContactList","ContactDetail","EditContact","App","LOCAL_STORAGE_KEY","contacts","setContacts","searchTerm","setSearchTerm","searchResults","setSearchResults","retrieveContacts","response","get","data","addContactHandler","contact","console","log","request","id","post","updateContactHandler","put","name","email","map","removeContactHandler","delete","newContactList","filter","searchHandler","Object","values","join","toLowerCase","includes","getAllContacts","allContacts","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { uuid } from 'uuidv4'\nimport api from \"../api/contacts\"\nimport './App.css';\nimport Header from './Header'\nimport AddContact from './AddContact'\nimport ContactList from './ContactList'\nimport ContactDetail from './ContactDetail'\nimport EditContact from './EditContact'\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = \"contacts\"\n  const [contacts, setContacts] = useState([])\n  const [searchTerm , setSearchTerm] = useState(\"\")\n  const [searchResults , setSearchResults] = useState([])\n\n  //RetrieveContacts\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\")\n    return response.data;\n  }\n\n  const addContactHandler = async (contact) => {\n    console.log(contact)\n    const request = {\n      id: uuid(),\n      ...contact\n    }\n\n    const response = await api.post(\"/contacts\", request)\n    console.log(response)\n    setContacts([...contacts, response.data])\n  }\n\n  const  updateContactHandler = async (contact)=>{\n      const response = await api.put(`/contacts/${contact.id}` , contact)\n      const {id,name,email} = response.data\n      setContacts(contacts.map(contact => {\n          return contact.id === id ? {...response.data} : contact\n      }))\n  }\n\n  const removeContactHandler = async (id) => {\n    await api.delete(`/contacts/${id}`)\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id \n    })\n\n    setContacts(newContactList)\n  }\n\n  const searchHandler = (searchTerm)=>{\n    setSearchTerm(searchTerm)\n    if(searchTerm !== \"\"){\n      const newContactList = contacts.filter((contact) => {\n        Object.values(contact).join(\" \").toLowerCase().includes\n      })\n    }\n  }\n\n  useEffect(() => {\n    //fetching data from localStorage \n    // const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    // if (retriveContacts) setContacts(retriveContacts)\n\n    //fetching data from server(api)\n    const getAllContacts = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setContacts(allContacts)\n    }\n\n    getAllContacts()\n\n  }, [])\n\n  useEffect(() => {\n    // localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts))\n  }, [contacts])\n\n  return (\n    <div>\n      <Router>\n        <Header />\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => (\n              <ContactList\n                {...props}\n                contacts={contacts}\n                getContactId={removeContactHandler}\n                term={searchTerm}\n                searchKeyword = {searchHandler}\n              />\n            )}\n          />\n          <Route\n            path=\"/add\"\n            render={(props) => (\n              <AddContact\n                {...props}\n                addContactHandler={addContactHandler}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/edit\"\n            render={(props) => (\n              <EditContact\n                {...props}\n                updateContactHandler={updateContactHandler}\n              />\n            )}\n          />\n\n          <Route path=\"/contact/:id\" component={ContactDetail} />\n        </Switch>\n\n        <div className=\"ui container\">\n\n        </div>\n      </Router>\n    </div>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}