{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\contact-app\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { uuid } from 'uuidv4';\nimport api from \"../api/contacts\";\nimport './App.css';\nimport Header from './Header';\nimport AddContact from './AddContact';\nimport ContactList from './ContactList';\nimport ContactDetail from './ContactDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState([]); //RetrieveContacts\n\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  };\n\n  const addContactHandler = contact => {\n    console.log(contact);\n    setContacts([...contacts, {\n      id: uuid(),\n      ...contact\n    }]);\n  };\n\n  const removeContactHandler = id => {\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n\n  useEffect(() => {\n    //fetching data from localStorage \n    // const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    // if (retriveContacts) setContacts(retriveContacts)\n    //fetching data from server\n    const getAllContacts = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setContacts(allContacts);\n    };\n\n    getAllContacts;\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(ContactList, { ...props,\n            contacts: contacts,\n            getContactId: removeContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          render: props => /*#__PURE__*/_jsxDEV(AddContact, { ...props,\n            addContactHandler: addContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact/:id\",\n          component: ContactDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WajkMADgk+4Cka/G5/8OzNt4WxA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/REACT/contact-app/src/components/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","uuid","api","Header","AddContact","ContactList","ContactDetail","App","LOCAL_STORAGE_KEY","contacts","setContacts","retrieveContacts","response","get","data","addContactHandler","contact","console","log","id","removeContactHandler","newContactList","filter","getAllContacts","allContacts","localStorage","setItem","JSON","stringify","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { uuid } from 'uuidv4'\nimport  api from  \"../api/contacts\"\nimport './App.css';\nimport Header from './Header'\nimport AddContact from './AddContact'\nimport ContactList from './ContactList'\nimport ContactDetail from './ContactDetail'\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = \"contacts\"\n  const [contacts, setContacts] = useState([])\n\n  //RetrieveContacts\n  const  retrieveContacts = async () =>{\n    const response = await api.get(\"/contacts\")\n    return response.data;\n  }\n\n  const addContactHandler = (contact) => {\n    console.log(contact)\n    setContacts([...contacts, { id: uuid(), ...contact }])\n  }\n\n  const removeContactHandler = (id) => {\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id\n    })\n\n    setContacts(newContactList)\n  }\n\n  useEffect(() => {\n    //fetching data from localStorage \n    // const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    // if (retriveContacts) setContacts(retriveContacts)\n\n    //fetching data from server\n    const getAllContacts = async () =>{\n      const allContacts = await retrieveContacts();\n      if(allContacts) setContacts(allContacts)\n    }\n\n    getAllContacts\n\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts))\n  }, [contacts])\n\n  return (\n    <div>\n      <Router>\n        <Header />\n        <Switch>\n          <Route\n           path=\"/\"\n            exact \n            render={(props) =>(\n               <ContactList\n                 {...props} \n                 contacts={contacts}\n                  getContactId={removeContactHandler}\n                  />\n                  )}\n             />\n          <Route \n            path=\"/add\"\n             render = {(props)=>(\n               <AddContact\n               {...props}\n               addContactHandler={addContactHandler}\n               />\n             )}\n          />\n\n          <Route path=\"/contact/:id\" component={ContactDetail} />\n        </Switch>\n\n        <div className=\"ui container\">\n\n        </div>\n      </Router>\n    </div>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}