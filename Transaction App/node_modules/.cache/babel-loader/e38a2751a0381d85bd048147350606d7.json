{"ast":null,"code":"var _jsxFileName = \"D:\\\\APP React\\\\my-app\\\\src\\\\components\\\\sortingDateFake.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // import { response } from 'express'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AxiosData extends Component {\n  constructor(props) {\n    super(props);\n    this.tableStyle = {\n      color: \"black\",\n      padding: \"10px\",\n      fontFamily: \"Arial\",\n      border: 'solid'\n    };\n    this.state = {\n      data: [],\n      Balance: 0\n    };\n  }\n\n  componentDidMount() {\n    // axios.get(\"mongodb+srv://user:pass@mahi.bsizi.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\")\n    // axios.get(\"https://jsonplaceholder.typicode.com/posts\")\n    axios.get(\"http://localhost:5555/get\").then(response => {\n      console.log(response.data);\n      const creditData = response.data.filter(x => x.TransactionType == \"Credit\");\n      const debitData = response.data.filter(x => x.TransactionType == \"Debit\");\n      let creditSum = creditData.reduce((accumulator, current) => Number(accumulator) + Number(current.Amount), 0);\n      let debitSum = debitData.reduce((accumulator, current) => Number(accumulator) + Number(current.Amount), 0);\n      this.setState({\n        data: response.data,\n        Balance: creditSum - debitSum\n      });\n      this.setState({\n        data: response.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    const datacopy = Array.from(data);\n    let date = null;\n    const ordenarPorFecha = datacopy.sort((a, b) => {\n      return new Date(b.date) - new Date(a.date);\n    });\n    ordenarPorFecha.map((item, index) => {\n      if (date !== new Date(item.date).toLocaleDateString()) {\n        console.log(item.date);\n        date = new Date(item.date).toLocaleDateString();\n      }\n\n      console.log(item.file.name);\n    });\n    console.log(ordenarPorFecha);\n    console.log(data);\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AxiosData;","map":{"version":3,"sources":["D:/APP React/my-app/src/components/sortingDateFake.js"],"names":["React","Component","axios","AxiosData","constructor","props","tableStyle","color","padding","fontFamily","border","state","data","Balance","componentDidMount","get","then","response","console","log","creditData","filter","x","TransactionType","debitData","creditSum","reduce","accumulator","current","Number","Amount","debitSum","setState","catch","err","render","datacopy","Array","from","date","ordenarPorFecha","sort","a","b","Date","map","item","index","toLocaleDateString","file","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n// import { response } from 'express'\r\n\r\nclass AxiosData extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             data : [],\r\n             Balance : 0\r\n        }\r\n    }\r\n    componentDidMount(){\r\n// axios.get(\"mongodb+srv://user:pass@mahi.bsizi.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\")\r\n// axios.get(\"https://jsonplaceholder.typicode.com/posts\")\r\naxios.get(\"http://localhost:5555/get\")\r\n.then(response =>{\r\n    console.log(response.data)\r\n    const creditData = response.data.filter(x => x.TransactionType == \"Credit\");\r\n     const debitData = response.data.filter(x => x.TransactionType == \"Debit\");\r\n     let creditSum = creditData.reduce((accumulator, current) => Number(accumulator) + Number(current.Amount), 0);\r\n     let debitSum = debitData.reduce((accumulator, current) => Number(accumulator) + Number(current.Amount), 0);\r\n\r\n                this.setState({ data: response.data, Balance: creditSum - debitSum })\r\n            \r\n    this.setState({data : response.data})\r\n})   \r\n.catch (err =>{\r\n    console.log(err)\r\n}) \r\n}\r\ntableStyle = {\r\n    color: \"black\",\r\n    padding: \"10px\",\r\n    fontFamily: \"Arial\",\r\n    border : 'solid'\r\n}\r\n    render() {\r\n        const {data } = this.state\r\n        const datacopy = Array.from(data);\r\n\r\nlet date = null;\r\n\r\nconst ordenarPorFecha = datacopy.sort((a, b) => {\r\n  return new Date(b.date) - new Date(a.date);\r\n});\r\n\r\nordenarPorFecha.map((item, index) => {\r\n  if (date !== new Date(item.date).toLocaleDateString()) {\r\n    console.log(item.date);\r\n    date = new Date(item.date).toLocaleDateString();\r\n  }\r\n  console.log(item.file.name);\r\n});\r\n\r\nconsole.log(ordenarPorFecha);\r\nconsole.log(data);\r\n\r\n        \r\n        return (\r\n            <div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AxiosData\r\n"]},"metadata":{},"sourceType":"module"}